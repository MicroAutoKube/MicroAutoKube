(()=>{var e={};e.id=727,e.ids=[727],e.modules={3295:e=>{"use strict";e.exports=require("next/dist/server/app-render/after-task-async-storage.external.js")},10846:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-page.runtime.prod.js")},11723:e=>{"use strict";e.exports=require("querystring")},12412:e=>{"use strict";e.exports=require("assert")},28354:e=>{"use strict";e.exports=require("util")},29294:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-async-storage.external.js")},33196:(e,r,t)=>{"use strict";t.d(r,{z:()=>a});var s=t(96330);let o=global.prisma??new s.PrismaClient({log:["query","info","warn","error"]});(async()=>{console.log("\uD83D\uDD04 Testing Prisma database connection...");try{await o.$connect(),console.log("✅ Prisma database connected successfully!")}catch(e){console.error("❌ Prisma database connection failed:",e)}})();let a=o},44870:e=>{"use strict";e.exports=require("next/dist/compiled/next-server/app-route.runtime.prod.js")},55511:e=>{"use strict";e.exports=require("crypto")},55591:e=>{"use strict";e.exports=require("https")},63033:e=>{"use strict";e.exports=require("next/dist/server/app-render/work-unit-async-storage.external.js")},69582:(e,r,t)=>{"use strict";t.r(r),t.d(r,{patchFetch:()=>N,routeModule:()=>g,serverHooks:()=>v,workAsyncStorage:()=>P,workUnitAsyncStorage:()=>R});var s={};t.r(s),t.d(s,{GET:()=>y,POST:()=>x,PUT:()=>w});var o=t(96559),a=t(48088),n=t(37719),i=t(32190),u=t(33196),l=t(96330),c=t(19854),d=t(78647);let p=e=>Buffer.from(e,"base64").toString("utf-8"),f=process.env.ENCRYPTION_KEY,h=e=>{let r=d.Et.randomBytes(16);if(!f)throw Error("ENCRYPTION_KEY is not defined");let t=d.Et.createCipheriv("aes-256-cbc",Buffer.from(f,"hex"),r),s=t.update(e);return s=Buffer.concat([s,t.final()]),r.toString("hex")+":"+s.toString("hex")},m=e=>{if(!f)throw Error("ENCRYPTION_KEY is not defined");if(!e||!e.includes(":"))throw Error("Invalid encrypted SSH key format");let[r,t]=e.split(":");if(!r||!t)throw Error("Malformed encrypted data");let s=Buffer.from(r,"hex"),o=Buffer.from(t,"hex"),a=d.Et.createDecipheriv("aes-256-cbc",Buffer.from(f,"hex"),s),n=a.update(o);return(n=Buffer.concat([n,a.final()])).toString()};async function y(e){try{let r=await (0,c.getServerSession)(),t=e.headers.get("authorization")===`Bearer ${process.env.INTERNAL_API_TOKEN}`;if(!(r?.user?.email||t))return i.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:s}=new URL(e.url),o=s.get("id");if(o){let e=await u.z.clusterProfile.findFirst({where:{id:o},include:{nodes:!0,clusterConfig:{include:{helm:!0,registry:!0,metrics:!0,localPathProvisioner:!0,k8sCluster:!0,globalCluster:!0}},clusterApp:{include:{kubesphere:!0}}}});if(!e)return i.NextResponse.json({error:"Cluster not found"},{status:404});return t&&e.nodes&&(e.nodes=await Promise.all(e.nodes.map(async e=>{if(e.sshKey)try{e.sshKey=await m(e.sshKey)}catch(r){console.error(`Failed to decrypt SSH key for node ${e.id}:`,r)}return e}))),i.NextResponse.json(e,{status:200})}let a=await u.z.clusterProfile.findMany({include:{nodes:!0,clusterConfig:{include:{helm:!0,registry:!0,metrics:!0,localPathProvisioner:!0,k8sCluster:!0,globalCluster:!0}}}});if(t)for(let e of a)e.nodes&&(e.nodes=await Promise.all(e.nodes.map(async e=>{if(e.sshKey)try{e.sshKey=await m(e.sshKey)}catch(r){console.error(`Failed to decrypt SSH key for node ${e.id}:`,r)}return e})));return i.NextResponse.json(a,{status:200})}catch(e){return console.error("Error fetching clusters:",e),i.NextResponse.json({error:"Failed to fetch clusters"},{status:500})}finally{await u.z.$disconnect()}}async function x(e){try{let{clusterName:r,kubernetesVersion:t,containerRuntime:s,containerVersion:o,globalAuth:a,nodes:n}=await e.json(),d=await (0,c.getServerSession)();if(!d?.user?.email)return i.NextResponse.json({error:"Unauthorized"},{status:401});let f=await u.z.user.findUnique({where:{email:d.user.email}});if(!f)return i.NextResponse.json({error:"User not found"},{status:404});let m=f.id;if(!r||!t||!s||!o||!n.length||!a.mode)return i.NextResponse.json({error:"Missing required fields"},{status:400});if(await u.z.clusterProfile.findUnique({where:{name:r}}))return i.NextResponse.json({error:"Cluster name already exists"},{status:409});let y=async e=>{let r="default"===e.authMode?a.mode:e.authMode;if("username_password"===r)return{authType:l.AuthType.PASSWORD,username:"default"===e.authMode?a.username:e.username,password:"default"===e.authMode?a.password:e.password,sshKey:null};if("ssh_key"===r){let r="default"===e.authMode?a.sshKey:e.sshKey;if(!r)throw Error("SSH Key required but not provided");let t=p(r),s=h(t);return{authType:l.AuthType.SSH_KEY,username:"default"===e.authMode?a.username:e.username,password:null,sshKey:s}}throw Error(`Invalid authentication mode: ${r}`)},x=await Promise.all(n.map(async e=>({hostname:e.hostname,ipAddress:e.ipAddress,role:e.role,...await y(e)}))),w=await u.z.clusterProfile.create({data:{name:r,kubernetesVersion:t,containerRuntime:s,containerVersion:o,userId:m,nodes:{create:x}},include:{nodes:!0}});return i.NextResponse.json(w,{status:201})}catch(e){return console.error("Cluster creation error:",e),i.NextResponse.json({error:e.message},{status:500})}finally{await u.z.$disconnect()}}async function w(e){try{if(e.headers.get("authorization")!==`Bearer ${process.env.INTERNAL_API_TOKEN}`)return i.NextResponse.json({error:"Unauthorized"},{status:401});let{searchParams:r}=new URL(e.url),t=r.get("id");if(!t)return i.NextResponse.json({error:"Cluster ID is required"},{status:400});let s=await u.z.clusterProfile.update({where:{id:t},data:{ready:!0}});return i.NextResponse.json({message:"Cluster marked as ready",cluster:s},{status:200})}catch(e){return console.error("Error updating cluster status:",e),i.NextResponse.json({error:e.message},{status:500})}finally{await u.z.$disconnect()}}let g=new o.AppRouteRouteModule({definition:{kind:a.RouteKind.APP_ROUTE,page:"/api/clusters/route",pathname:"/api/clusters",filename:"route",bundlePath:"app/api/clusters/route"},resolvedPagePath:"/Users/mewpk/Desktop/Project/MicroAutoKube/dashboard-autokube/src/app/api/clusters/route.ts",nextConfigOutput:"",userland:s}),{workAsyncStorage:P,workUnitAsyncStorage:R,serverHooks:v}=g;function N(){return(0,n.patchFetch)({workAsyncStorage:P,workUnitAsyncStorage:R})}},74075:e=>{"use strict";e.exports=require("zlib")},78335:()=>{},78647:(e,r,t)=>{"use strict";t.d(r,{zM:()=>s,Et:()=>a});let s=t(85663).Ay;var o=t(55511);let a=t.n(o)()},79428:e=>{"use strict";e.exports=require("buffer")},79551:e=>{"use strict";e.exports=require("url")},81630:e=>{"use strict";e.exports=require("http")},94735:e=>{"use strict";e.exports=require("events")},96330:e=>{"use strict";e.exports=require("@prisma/client")},96487:()=>{}};var r=require("../../../webpack-runtime.js");r.C(e);var t=e=>r(r.s=e),s=r.X(0,[719,854,580,663],()=>t(69582));module.exports=s})();